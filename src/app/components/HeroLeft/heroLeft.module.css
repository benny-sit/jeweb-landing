.wrapper {
    display: grid;
    place-items: center;
    width: 100%;
    height: 100%;
    padding-left: 2em;
    position: relative;
    isolation: isolate;
}

.wrapper:hover .square
{   

    transform: translateZ(50px);
    transition: transform 200ms ease-out;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.05);

    --contentOpacity: 1;
}

.wrapper:hover .secondSquare {
    transform: translateZ(80px);
}

.card {
    width: 100% ;
    aspect-ratio: 16/9;
    background-color: #ebeef3;
    border-radius: 2em;
    position: relative;

    --rotationX: 30deg;
    --rotationY: 30deg;

    --initX: 30deg;
    --initY: 30deg;
    --angle: 7.5deg;

    transform-style: preserve-3d;
    transform: perspective(5000px) rotateX(var(--rotationX)) rotateY(var(--rotationY));
    transition: transform 300ms ease-out;


    background-image: url('/home/heroLeftBg.svg');
    background-size: cover;
}

.card::after, .card::before {
    content: '';
    position: absolute;
}

.card::before {
    inset: -1em;
    background-image: linear-gradient(to right, #4b6bfb, #67cba0, #4b6bfb , #7b92b2 );
    border-radius: inherit;
    transform: translateZ(-50px);
    background-size: 200%;
    animation: cardGrad 2s linear forwards;
}

@keyframes cardGrad {
    0% { background-position: 0%;}
    100% { background-position: 70%;}
}

.card::after {
    inset: 1em;
    border-radius: inherit;
    background: #283487;
    filter: blur(15px);
    opacity: 0.5;
    transform: translateZ(-49px);
}

/* .cardContent {
    inset: 0;
    display: flex;
    border-radius: inherit;
    height: 100%;
}

.cardContent > .sideNav {
    height: 100%;
    width: 17%;
    background-color: #4b6bfb;
} */

.square {
    position: absolute;
    width: 25%;
    top: 25%;
    aspect-ratio: 1 / 1;
    background-color: #fff;
    border-radius: .5em;
    left: 30%;
    transform: translateZ(10px);
    padding: 0.5em;
    transform-style: preserve-3d;

    --contentOpacity: 0.5
}

.square > div {
    border-radius: 99px;
    width: 100%;
    height: 4px;
    background-color: #3a4cf1;
    margin-top: 0.25em;
    opacity: var(--contentOpacity);
    transition: opacity 200ms linear;
}

.square > div:nth-child(2) {
    width: 50%;
}

.secondSquare{
    width: 15%;
    top: 50%;
    left: 57%;
}

.secondSquare > div:nth-child(2) {
    margin-left: auto;
}



.topButtons {
    display: flex;
    gap: 0.5em;
    position: absolute;
    right: 1em;
    top: 0;
    transform: translateY(-130%);
}

.topButtons > div {
    width: 1em;
    aspect-ratio: 1;
    border-radius: 99px;
    opacity: 0.5;
}

.topButtons > div:hover {
    opacity: 1;
    translate: opacity 200ms ease;
}

.topButtons > *:nth-child(1) {
    background-color: #36D399;
}

.topButtons > *:nth-child(2) {
    background-color: #FBBD23;
}

.topButtons > *:nth-child(3) {
    background-color: #F87272;
}

.scrollBar {
    position: absolute;
    left: 0;
    bottom: 1.5em;
    transform: translateX(-130%);
    width: 1em;
    height: 4em;
    border-radius: 99px;
    background-color: #ebeef3;
}

.scrollBar::before {
    position: absolute;
    content: '';
    border-radius: inherit;
    top: 0.25em;
    height: 1.75em;
    width: 0.6em;
    background-color: #d2d9e5;
    left: 50%;
    --scaleY: 1;
    animation: scrollAnimation alternate infinite 3000ms ease-in-out;
}

.scrollBar:hover::before {
    -webkit-animation-play-state: paused;
    -moz-animation-play-state: paused;
    -o-animation-play-state: paused;
     animation-play-state: paused;
}

@keyframes scrollAnimation {
    0% {
        transform: translateX(-50%) translateY(0) scaleY(0.95);
    }
    100% {
        transform: translateX(-50%) translateY(100%) scaleY(1);
    }
}



/* For Mouse Movement */

.mousePositionTracker {
    position: absolute;
    width: calc(100% / 3);
    height: calc(100% / 3);
    z-index: 2;
    /* outline: 1px solid; */
}
  
.mousePositionTracker:nth-child(3) {
    display: none;
}

  /* 1st, 4th, 7th */
.mousePositionTracker:nth-child(3n - 2) {
left: 0;
}
/* 2nd, 5th, 8th */
.mousePositionTracker:nth-child(3n - 1) {
left: calc(100% / 3);
}

/* 2nd, 5th, 8th */
.mousePositionTracker:nth-child(3n) {
right: 0;
}

.mousePositionTracker:nth-child(-n + 3) {
    top: 0;
}

/* 4 to 6 */
.mousePositionTracker:nth-child(n + 4):nth-child(-n + 6) {
top: calc(100% / 3);
}
/* 7 to 9 */
.mousePositionTracker:nth-child(n + 7):nth-child(-n + 9) {
bottom: 0;
}

.mousePositionTracker:nth-child(1):hover ~ .card {
--rotationX: calc(var(--initX) + var(--angle));
--rotationY: calc(var(--initY) + var(--angle) * -1);
}

.mousePositionTracker:nth-child(2):hover ~ .card {
--rotationX: calc(var(--initX) + var(--angle));
}

/* .mousePositionTracker:nth-child(3):hover ~ .card {
--rotationX: calc(var(--initX) + var(--angle));
--rotationY: calc(var(--initY) + var(--angle));
} */

.mousePositionTracker:nth-child(4):hover ~ .card {
--rotationY: calc(var(--initY) + var(--angle) * -1);
}

.mousePositionTracker:nth-child(6):hover ~ .card {
--rotationY: calc(var(--initY) + var(--angle));
}

.mousePositionTracker:nth-child(7):hover ~ .card {
--rotationY: calc(var(--initX) + var(--angle) * -1);
--rotationX: calc(var(--initY) + var(--angle) * -1);
}

.mousePositionTracker:nth-child(8):hover ~ .card {
--rotationX: calc(var(--initX) + var(--angle) * -1);
}

.mousePositionTracker:nth-child(9):hover ~ .card {
--rotationY: calc(var(--initY) + var(--angle));
--rotationX: calc(var(--initX) + var(--angle) * -1);
}
